@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "UpdateWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Yazar Bilgileri Güncelleme Sayfası</h2>

@using (Html.BeginForm("UpdateWriter", "Writer", FormMethod.Post))
{
<div class="form-group">
    @Html.Label("Yazar ID")
    @Html.TextBoxFor(x => x.WriterID, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterID)
    <br />
    @Html.Label("Yazarın Adı:")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br />
    @Html.Label("Yazarın Soyadı:")
    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurname)
    <br />
    @Html.Label("Yazarın Mail Adresi:")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />
    @Html.Label("Yazarın Görsel Linki:")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />
    @Html.Label("Yazar Hakkında:")
    @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br />
    <button class="btn btn-success">Yazar Güncelle</button>
</div>
}
